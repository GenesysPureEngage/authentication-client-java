package com.genesys.authentication;

import com.genesys.internal.authentication.model.*;
import com.genesys.internal.common.ApiClient;
import com.genesys.internal.common.ApiException;

public class AuthenticationApi {

    private final RetrieveTokenApi retrieveTokenApi;
    private final AuthorizationApi authorizationApi;
    private ApiClient client;
    private com.genesys.internal.authentication.api.AuthenticationApi authenticationApi;

    /**
     * Create a AuthenticationApi object with your given authentication base URI and API key.
     *
     * @param apiKey  The API key to be included in HTTP requests.
     * @param baseUrl The base URL of the PureEngage Cloud API.
     */
    public AuthenticationApi(String apiKey, String baseUrl) {
        client = new ApiClient();
        client.setBasePath(baseUrl);
        client.addDefaultHeader("x-api-key", apiKey);
        retrieveTokenApi = new RetrieveTokenApi(client);
        authorizationApi = new AuthorizationApi(client);
        authenticationApi = new com.genesys.internal.authentication.api.AuthenticationApi(client);
    }

    /**
     * The authorizationApi object contains API requests to perform authorization.
     */
    public AuthorizationApi getAuthorization() {
        return authorizationApi;
    }

    /**
     * The retrieveTokenApi object contains API requests to retrieve access token.
     */
    public RetrieveTokenApi getRetrieveToken() {
        return retrieveTokenApi;
    }

    /**
     * The authenticationApi object contains autogenerated API requests.
     */
    public com.genesys.internal.authentication.api.AuthenticationApi getAuthenticationApi() {
        return authenticationApi;
    }

    /**
     * Change password
     * Change the user&#39;s password.
     *
     * @param request       request (required)
     * @param authorization The OAuth 2 bearer access token you received from [/auth/v3/oauth/token](/reference/authentication/Authentication/index.html#retrieveToken). For example: \&quot;Authorization: bearer a4b5da75-a584-4053-9227-0f0ab23ff06e\&quot;  (optional, default to bearer)
     * @return ModelApiResponse
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public ModelApiResponse changePassword(ChangePasswordOperation request, String authorization) throws AuthenticationApiException {
        try {
            ApiRequestOfChangePasswordOperation req = new ApiRequestOfChangePasswordOperation();
            req.data(request);
            return authenticationApi.changePassword(req, authorization);
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error changing password", e);
        }
    }

    /**
     * Check connection
     * Return 200 if user is authenticated otherwise 403
     *
     * @return ModelApiResponse
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public ModelApiResponse ping() throws AuthenticationApiException {
        try {
            return authenticationApi.ping();
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error during keep alive ping", e);
        }
    }

    /**
     * Get user information by access token
     * Get information about a user by their OAuth 2 access token.
     *
     * @param authorization The OAuth 2 bearer access token. For example: \&quot;Authorization: bearer a4b5da75-a584-4053-9227-0f0ab23ff06e\&quot;  (required)
     * @return CloudUserDetails
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public CloudUserDetails getUserInfo(String authorization) throws AuthenticationApiException {
        try {
            return authenticationApi.getInfo1(authorization);
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error getting userinfo", e);
        }
    }

    /**
     * Get OpenID user information by access token
     * Get information about a user by their OAuth 2 access token.
     *
     * @param authorization The OAuth 2 bearer access token you received from [/auth/v3/oauth/token](/reference/authentication/Authentication/index.html#retrieveToken). For example: \&quot;Authorization: bearer a4b5da75-a584-4053-9227-0f0ab23ff06e\&quot;  (required)
     * @return OpenIdUserInfo
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public OpenIdUserInfo getUserInfoOpenid(String authorization) throws AuthenticationApiException {
        try {
            return authenticationApi.getInfo(authorization);
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error getting openid userinfo", e);
        }
    }

    /**
     * getJwtInfo
     *
     * @param authorization The OAuth 2 bearer access token you received from [/auth/v3/oauth/token](/reference/authentication/Authentication/index.html#retrieveToken). For example: \&quot;Authorization: bearer a4b5da75-a584-4053-9227-0f0ab23ff06e\&quot;  (required)
     * @return ModelApiResponse
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public ModelApiResponse getJwtUserInfo(String authorization) throws AuthenticationApiException {
        try {
            return authenticationApi.getJwtInfoUsingGET(authorization);
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error getting jwt userinfo", e);
        }
    }

    /**
     * Sign-out a logged in user
     * Sign-out the current user and invalidate either the current token or all tokens associated with the user.
     *
     * @param authorization The OAuth 2 bearer access token you received from [/auth/v3/oauth/token](/reference/authentication/Authentication/index.html#retrieveToken). For example: \&quot;Authorization: bearer a4b5da75-a584-4053-9227-0f0ab23ff06e\&quot;  (required)
     * @param global        Specifies whether to invalidate all tokens for the current user (&#x60;true&#x60;) or only the current token (&#x60;false&#x60;). (optional)
     * @param redirectUri   Specifies the URI where the browser is redirected after sign-out is successful. (optional)
     * @return ModelApiResponse
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public ModelApiResponse signOutGet(String authorization, Boolean global, String redirectUri) throws AuthenticationApiException {
        try {
            return authenticationApi.signOut1(authorization, global, redirectUri);
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error sign out", e);
        }
    }

    /**
     * Sign-out a logged in user
     * Sign-out the current user and invalidate either the current token or all tokens associated with the user.
     *
     * @param authorization The OAuth 2 bearer access token you received from [/auth/v3/oauth/token](/reference/authentication/Authentication/index.html#retrieveToken). For example: \&quot;Authorization: bearer a4b5da75-a584-4053-9227-0f0ab23ff06e\&quot;  (required)
     * @param global        Specifies whether to invalidate all tokens for the current user (&#x60;true&#x60;) or only the current token (&#x60;false&#x60;). (optional)
     * @return ModelApiResponse
     * @throws AuthenticationApiException if the call is unsuccessful.
     */
    public ModelApiResponse signOutPost(String authorization, Boolean global) throws AuthenticationApiException {
        try {
            return authenticationApi.signOut(authorization, global);
        } catch (ApiException e) {
            throw new AuthenticationApiException("Error sign out", e);
        }
    }
}
